{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","to","id","className","classes","Item","active","name","MessageItem","message","Dialogs","dialogs","dialogsData","map","d","messages","messagesData","m","newMessageRef","React","createRef","DialogsItems","MessagesItems","onChange","text","current","value","AddMessageTextCreateAction","ref","messagesText","onClick","AddMessageCreateAction","compose","connect","state","messagesPage","dispatch","withAuthRedirect"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,cAAgB,iC,0FCG1KC,EAAa,SAACC,GAChB,OACI,cAAC,IAAD,CAASC,GAAI,aAAeD,EAAME,GAAIC,UAAWC,IAAQC,KAAO,IAAMD,IAAQE,OAA9E,SACI,8BAAMN,EAAMO,UAIlBC,EAAc,SAACR,GACjB,OACI,qBAAKG,UAAWC,IAAQC,KAAxB,SACKL,EAAMS,WA4BJC,EAxBC,SAACV,GACb,IAAIW,EAAUX,EAAMY,YAAYC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYP,KAAMO,EAAEP,KAAML,GAAIY,EAAEZ,IAAWY,EAAEZ,OACnFa,EAAWf,EAAMgB,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAaR,QAASQ,EAAER,SAAgBQ,EAAEf,OACjFgB,EAAgBC,IAAMC,YAQ1B,OACI,sBAAKjB,UAAWC,IAAQM,QAAxB,UACI,qBAAKP,UAAWC,IAAQiB,aAAxB,SACKV,IAEL,sBAAKR,UAAWC,IAAQkB,cAAxB,UACI,0BAAUC,SAbR,WACV,IAAIC,EAAON,EAAcO,QAAQC,MACjC1B,EAAM2B,2BAA2BH,IAWII,IAAOV,EAAeQ,MAAO1B,EAAM6B,eAChE,wBAAQC,QAVH,WACb9B,EAAM+B,0BASE,yBACChB,S,gCCjBFiB,sBACXC,aAfoB,SAACC,GACrB,MAAO,CACHtB,YAAasB,EAAMC,aAAavB,YAChCI,aAAckB,EAAMC,aAAanB,aACjCa,aAAcK,EAAMC,aAAaN,iBAId,SAACO,GACxB,MAAO,CACHL,uBAAwB,kBAAMK,EAASL,gBACvCJ,2BAA4B,SAACH,GAAD,OAAUY,EAAST,YAA2BH,SAK9Ea,IAFWL,CAEOtB","file":"static/js/3.24d115be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__o5_Dm\",\"DialogsItems\":\"Dialogs_DialogsItems__2PKOR\",\"Item\":\"Dialogs_Item__3eqqA\",\"active\":\"Dialogs_active__b0s_k\",\"MessagesItems\":\"Dialogs_MessagesItems__2MTsR\"};","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink to={'/messages/' + props.id} className={classes.Item + ' ' + classes.active}>\r\n            <div>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={classes.Item}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    let dialogs = props.dialogsData.map( d => <DialogItem name={d.name} id={d.id} key = {d.id}/>)\r\n    let messages = props.messagesData.map(m => <MessageItem message={m.message} key = {m.id}/>)\r\n    let newMessageRef = React.createRef();\r\n    let newText = () => {\r\n        let text = newMessageRef.current.value;\r\n        props.AddMessageTextCreateAction(text);\r\n    }\r\n    let newMessage = () => {\r\n        props.AddMessageCreateAction();\r\n    }\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            <div className={classes.DialogsItems}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={classes.MessagesItems}>\r\n                <textarea onChange={newText} ref = {newMessageRef} value={props.messagesText}/>\r\n                <button onClick={newMessage}>Add message</button>\r\n                {messages}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Dialogs","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddMessageCreateAction, AddMessageTextCreateAction} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n        messagesText: state.messagesPage.messagesText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddMessageCreateAction: () => dispatch(AddMessageCreateAction()),\r\n        AddMessageTextCreateAction: (text) => dispatch(AddMessageTextCreateAction(text))\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}