{"version":3,"sources":["components/Users/Users.module.css","components/Users/Users.js","selectors/users-selector.js","components/Users/UsersContainer.js"],"names":["module","exports","Users","props","useState","firstNumber","setFirstNumber","sizePage","lastNumber","setLastNumber","pages","totalPages","Math","ceil","totalCountPages","i","push","onClick","slice","map","page","onClickPage","className","currentPage","styles","currentPages","users","u","to","id","src","photos","small","userPhoto","width","height","alt","followed","disabled","loadFollowing","some","onClickUnSubscribe","onClickSubscribe","name","getTotalCountPages","usersPage","getCurrentPage","getSizePage","getIsFetching","isFetching","getLoadFollowing","UsersContainer","clickPage","clickSubscribe","clickUnSubscribe","this","addUsers","Preloader","followToggle","updateLoadFollowing","React","Component","mapDispatchToPropsContainer","addUser","updateTotalCountPages","updateCurrentPage","updateIsFetching","connect","state"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,aAAe,8B,2JCyClBC,EAnCH,SAACC,GAKT,IAJA,MAAoCC,mBAAS,GAA7C,mBAAKC,EAAL,KAAkBC,EAAlB,KACA,EAAkCF,mBAASD,EAAMI,UAAjD,mBAAKC,EAAL,KAAiBC,EAAjB,KACIC,EAAQ,GACNC,EAAaC,KAAKC,KAAKV,EAAMW,gBAAkBX,EAAMI,UAClDQ,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BL,EAAMM,KAAKD,GAEf,OACI,gCACI,gCAAK,wBAAQE,QAAS,WAAOX,EAAeD,EAAcF,EAAMI,UAAWE,EAAcD,EAAaL,EAAMI,WAAvG,4CACAG,EAAMQ,MAAMb,EAAaG,GAAYW,KAAI,SAACC,GACvC,OAAO,sBAAMH,QAAS,kBAAMd,EAAMkB,YAAYD,IACjCE,UAAWnB,EAAMoB,cAAgBH,EAAOI,IAAOC,aAAe,KADpE,oBAEsBL,IAAXA,MACtB,wBAAQH,QAAS,WAAOX,EAAeD,EAAcF,EAAMI,UAAWE,EAAcD,EAAaL,EAAMI,WAAvG,qDAGHJ,EAAMuB,MAAMP,KAAI,SAAAQ,GAAC,OACd,gCACI,cAAC,IAAD,CAAUC,GAAI,YAAcD,EAAEE,GAA9B,SACI,qBAAKC,IAAuB,MAAlBH,EAAEI,OAAOC,MAAgBL,EAAEI,OAAOC,MAAQC,IAAWX,UAAWE,IAAQU,MAAO,IACpFC,OAAQ,IAAKC,IAAI,OAE1B,8BACKT,EAAEU,SACG,wBAAQC,SAAWnC,EAAMoC,cAAcC,MAAK,SAAAX,GAAE,OAAIA,IAAOF,EAAEE,MAAKZ,QAAS,WAAOd,EAAMsC,mBAAmBd,EAAEE,KAA3G,wBACA,wBAAQS,SAAWnC,EAAMoC,cAAcC,MAAK,SAAAX,GAAE,OAAIA,IAAOF,EAAEE,MAAKZ,QAAS,WAAOd,EAAMuC,iBAAiBf,EAAEE,KAAzG,wBAEV,8BAAMF,EAAEgB,OACR,8BAAMhB,EAAEE,OAXFF,EAAEE,W,QCpBfe,EAAqB,SAACzC,GAC/B,OAAOA,EAAM0C,UAAU/B,iBAGdgC,EAAiB,SAAC3C,GAC3B,OAAOA,EAAM0C,UAAUtB,aAGdwB,EAAc,SAAC5C,GACxB,OAAOA,EAAM0C,UAAUtC,UAGdyC,EAAgB,SAAC7C,GAC1B,OAAOA,EAAM0C,UAAUI,YAGdC,EAAmB,SAAC/C,GAC7B,OAAOA,EAAM0C,UAAUN,eCErBY,E,4MAEF9B,YAAc,SAACD,GAAU,EAAKjB,MAAMiD,UAAU,EAAKjD,MAAMI,SAAUa,I,EACnEsB,iBAAmB,SAACb,GAAQ,EAAK1B,MAAMkD,eAAexB,I,EACtDY,mBAAqB,SAACZ,GAAQ,EAAK1B,MAAMmD,iBAAiBzB,I,uDAH1D,WAAqB0B,KAAKpD,MAAMqD,SAASD,KAAKpD,MAAMoB,YAAagC,KAAKpD,MAAMI,Y,oBAK5E,WACI,OAAQ,qCACJ,8BAAMgD,KAAKpD,MAAM8C,WAAaQ,cAAc,OAC5C,cAAC,EAAD,CAAO3C,gBAAiByC,KAAKpD,MAAMW,gBAC5BS,YAAagC,KAAKpD,MAAMoB,YACxBhB,SAAUgD,KAAKpD,MAAMI,SACrBmD,aAAcH,KAAKpD,MAAMuD,aACzBhC,MAAO6B,KAAKpD,MAAMuB,MAClBa,cAAegB,KAAKpD,MAAMoC,cAC1BlB,YAAakC,KAAKlC,YAClBqB,iBAAkBa,KAAKb,iBACvBD,mBAAoBc,KAAKd,mBACzBkB,oBAAqBJ,KAAKI,6B,GAlBhBC,IAAMC,WAkC/BC,EAA8B,CAC9BJ,iBACAK,YACAC,0BACAC,sBACAC,qBACAP,wBACAH,aACAJ,cACAC,mBACAC,sBAGWa,uBAvBS,SAACC,GACrB,MAAO,CACH1C,ODjDiBvB,ECiDDiE,EDhDbjE,EAAM0C,UAAUnB,OCiDnBZ,gBAAiB8B,EAAmBwB,GACpC7C,YAAauB,EAAesB,GAC5B7D,SAAUwC,EAAYqB,GACtBnB,WAAYD,EAAcoB,GAC1B7B,cAAeW,EAAiBkB,IDtDhB,IAACjE,ICsEe2D,EAAzBK,CAAsDhB","file":"static/js/4.4b14e53e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPages\":\"Users_currentPages__2z9HT\"};","import React, {useState} from \"react\";\r\nimport userPhoto from '../assets/images/person-male.png'\r\nimport styles from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n    let [firstNumber, setFirstNumber] = useState(0);\r\n    let [lastNumber, setLastNumber] = useState(props.sizePage);\r\n    let pages = [];\r\n    const totalPages = Math.ceil(props.totalCountPages / props.sizePage);\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <div><button onClick={() => {setFirstNumber(firstNumber - props.sizePage); setLastNumber(lastNumber - props.sizePage)}}>Назад</button>\r\n                {pages.slice(firstNumber, lastNumber).map((page) => {\r\n                    return <span onClick={() => props.onClickPage(page)}\r\n                                 className={props.currentPage === page ? styles.currentPages : null}\r\n                                 key={page}>{` ${page}`}</span>})}\r\n                <button onClick={() => {setFirstNumber(firstNumber + props.sizePage); setLastNumber(lastNumber + props.sizePage)}}>Вперед</button>\r\n            </div>\r\n\r\n            {props.users.map(u =>\r\n                <div key={u.id}>\r\n                    <NavLink  to={\"/profile/\" + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles} width={100}\r\n                             height={100} alt='' />\r\n                    </NavLink>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={ props.loadFollowing.some(id => id === u.id)} onClick={() => {props.onClickUnSubscribe(u.id)}}>UnFollowed</button>\r\n                            : <button disabled={ props.loadFollowing.some(id => id === u.id)} onClick={() => {props.onClickSubscribe(u.id)}}>Followed</button>}\r\n                    </div>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.id}</div>\r\n\r\n                </div>)}\r\n        </div>)\r\n}\r\nexport default Users","\r\n\r\nexport const getUsers = (props) => {\r\n    return props.usersPage.users;\r\n}\r\n\r\nexport const getTotalCountPages = (props) => {\r\n    return props.usersPage.totalCountPages;\r\n}\r\n\r\nexport const getCurrentPage = (props) => {\r\n    return props.usersPage.currentPage;\r\n}\r\n\r\nexport const getSizePage = (props) => {\r\n    return props.usersPage.sizePage;\r\n}\r\n\r\nexport const getIsFetching = (props) => {\r\n    return props.usersPage.isFetching;\r\n}\r\n\r\nexport const getLoadFollowing = (props) => {\r\n    return props.usersPage.loadFollowing;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addUser,\r\n    addUsers,\r\n    clickPage,\r\n    clickSubscribe,\r\n    clickUnSubscribe,\r\n    followToggle,\r\n    updateCurrentPage,\r\n    updateIsFetching,\r\n    updateLoadFollowing,\r\n    updateTotalCountPages\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getLoadFollowing,\r\n    getSizePage,\r\n    getTotalCountPages,\r\n    getUsers\r\n} from \"../../selectors/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {this.props.addUsers(this.props.currentPage, this.props.sizePage)}\r\n    onClickPage = (page) => {this.props.clickPage(this.props.sizePage, page)}\r\n    onClickSubscribe = (id) => {this.props.clickSubscribe(id)}\r\n    onClickUnSubscribe = (id) => {this.props.clickUnSubscribe(id)}\r\n\r\n    render() {\r\n        return (<>\r\n            <div>{this.props.isFetching ? Preloader() : null}</div>\r\n            <Users totalCountPages={this.props.totalCountPages}\r\n                   currentPage={this.props.currentPage}\r\n                   sizePage={this.props.sizePage}\r\n                   followToggle={this.props.followToggle}\r\n                   users={this.props.users}\r\n                   loadFollowing={this.props.loadFollowing}\r\n                   onClickPage={this.onClickPage}\r\n                   onClickSubscribe={this.onClickSubscribe}\r\n                   onClickUnSubscribe={this.onClickUnSubscribe}\r\n                   updateLoadFollowing={this.updateLoadFollowing}/>\r\n        </>);\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalCountPages: getTotalCountPages(state),\r\n        currentPage: getCurrentPage(state),\r\n        sizePage: getSizePage(state),\r\n        isFetching: getIsFetching(state),\r\n        loadFollowing: getLoadFollowing(state),\r\n    }\r\n}\r\nlet mapDispatchToPropsContainer = {\r\n    followToggle,\r\n    addUser,\r\n    updateTotalCountPages,\r\n    updateCurrentPage,\r\n    updateIsFetching,\r\n    updateLoadFollowing,\r\n    addUsers,\r\n    clickPage,\r\n    clickSubscribe,\r\n    clickUnSubscribe\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPropsContainer)(UsersContainer);\r\n"],"sourceRoot":""}